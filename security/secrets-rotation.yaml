apiVersion: batch/v1
kind: CronJob
metadata:
  name: secrets-rotation
  namespace: production
spec:
  schedule: "0 0 1 * *"  # Monthly on 1st
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: secrets-rotation
            image: alpine:latest
            command:
            - /bin/sh
            - -c
            - |
              # Install required tools
              apk add --no-cache curl jq
              
              # Generate new secrets
              NEW_DB_PASSWORD=$(openssl rand -base64 32)
              NEW_REDIS_PASSWORD=$(openssl rand -base64 32)
              NEW_JWT_SECRET=$(openssl rand -base64 64)
              NEW_ENCRYPTION_KEY=$(openssl rand -base64 32)
              
              # Update PostgreSQL secret
              kubectl create secret generic postgres-secret \
                --from-literal=password="$NEW_DB_PASSWORD" \
                --from-literal=username="postgres" \
                -n production \
                --dry-run=client -o yaml | kubectl apply -f -
              
              # Update Redis secret
              kubectl create secret generic redis-secret \
                --from-literal=password="$NEW_REDIS_PASSWORD" \
                -n production \
                --dry-run=client -o yaml | kubectl apply -f -
              
              # Update application secret
              kubectl create secret generic app-secret \
                --from-literal=jwt-secret="$NEW_JWT_SECRET" \
                --from-literal=encryption-key="$NEW_ENCRYPTION_KEY" \
                -n production \
                --dry-run=client -o yaml | kubectl apply -f -
              
              # Restart deployments to pick up new secrets
              kubectl rollout restart deployment/wojny-laserowe -n production
              kubectl rollout restart deployment/postgres -n production
              kubectl rollout restart deployment/redis -n production
              
              # Wait for rollouts to complete
              kubectl rollout status deployment/wojny-laserowe -n production
              kubectl rollout status deployment/postgres -n production
              kubectl rollout status deployment/redis -n production
              
              echo "Secrets rotation completed successfully"
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
          restartPolicy: OnFailure
          serviceAccountName: secrets-rotation-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-rotation-sa
  namespace: production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: production
  name: secrets-rotation-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secrets-rotation-rolebinding
  namespace: production
subjects:
- kind: ServiceAccount
  name: secrets-rotation-sa
  namespace: production
roleRef:
  kind: Role
  name: secrets-rotation-role
  apiGroup: rbac.authorization.k8s.io
